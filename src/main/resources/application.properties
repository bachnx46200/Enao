#Port

server.port=${port:5000}



#Database

spring.datasource.url=${JDBC_DATABASE_URL:}

spring.datasource.username=${JDBC_DATABASE_USERNAME:}

spring.datasource.password=${JDBC_DATABASE_PASSWORD:}

spring.datasource.driverClassName=${JDBC_DATABASE_DRIVER:}



#Hibernate

spring.jpa.properties.hibernate.dialect=${SPRING_JPA_HIBERNATE_DIALECT:}

spring.jpa.properties.hibernate.id.new_generator_mappings = false

spring.jpa.properties.hibernate.show.sql = true

spring.jpa.properties.hibernate.format_sql = true

spring.jpa.generate-ddl=true

spring.jpa.properties.hibernate.hb2dll.auto = update

logging.level.org.hibernate.SQL=DEBUG

logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE


##spring.datasource.url=jdbc:mysql://localhost:3306/demo_springjwt
##spring.datasource.username=root
##spring.datasource.password=123456
##spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
##spring.jpa.show-sql=true
#spring.jpa.open-in-view=false
##spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
#spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext
#spring.jpa.properties.hibernate.id.new_generator_mappings=true
##spring.jpa.hibernate.ddl-auto=create-drop
#server.port = 8080
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.url=jdbc:postgresql://localhost:5432/test3
#spring.datasource.username=postgres
#spring.datasource.password=123456
#
### Hibernate Properties
## The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
## Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto = none